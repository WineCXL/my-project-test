{
    // ===== CMake基本配置 =====
    "cmake.configureOnOpen": false,              // 打开项目时不自动运行CMake配置
    "cmake.buildBeforeRun": false,               // 运行前不自动构建
    "cmake.automaticReconfigure": false,         // 不自动重新配置
    "cmake.autoSelectActiveFolder": false,       // 不自动选择活动文件夹
    "cmake.autoStartBuild": false,               // 不自动开始构建
    "cmake.configureOnEdit": false,              // 编辑CMake文件时不自动配置
    "cmake.configureOnStartup": false,           // 启动时不自动配置
    "cmake.parallelJobs": 4,                     // 并行构建任务数
    "cmake.buildDirectory": "${workspaceFolder}/build",    // 构建目录
    "cmake.installPrefix": "${workspaceFolder}/install",   // 安装目录

    // ===== 终端配置 =====
    "terminal.integrated.cwd": "${workspaceFolder}",       // 设置终端启动目录为工作区根目录
    "terminal.integrated.automationShell.windows": "",     // 禁用自动化shell
    "terminal.integrated.enablePersistentSessions": false, // 禁用持久会话
    "terminal.integrated.persistentSessionReviveProcess": "never", // 不自动恢复终端会话
    "terminal.integrated.defaultProfile.windows": null,    // 不设置默认终端配置文件

    // ===== Git配置 =====
    "git.ignoredRepositories": ["${workspaceFolder}/build"], // 让Git忽略build目录
    "git.scanRepositories": ["${workspaceFolder}"],          // 只扫描工作区主目录
    "git.autorefresh": false,                                // 不自动刷新Git状态
    "git.enabled": true,                                     // 启用Git功能
    "git.ignoreWindowsGit27Warning": true,                   // 忽略Git 2.7警告
    "git.ignoreLimitWarning": true,                          // 忽略Git限制警告
    "git.ignoreMissingGitWarning": false,                    // 不忽略Git缺失警告
    "git.fetchOnPull": false,                                // 拉取时不自动获取
    "git.untrackedChanges": "hidden",                        // 隐藏未跟踪的更改

    // ===== 文件排除 =====
    "files.exclude": {
        "**/.vs": true,                          // 隐藏.vs文件夹
        "**/build/**/*.obj": true,               // 隐藏build目录下的obj文件
        "**/build/**/*.pdb": true,               // 隐藏build目录下的pdb文件
        "**/build/**/*.ilk": true,               // 隐藏build目录下的ilk文件
        "**/build/**/*.lib": true,               // 隐藏build目录下的lib文件
        "**/build/CMakeFiles/**": true,          // 隐藏CMakeFiles目录
        "**/build/CMakeCache.txt": true,         // 隐藏CMakeCache.txt文件
        "**/build/**/*.cmake": true              // 隐藏cmake文件
    },

    // ===== 搜索排除 =====
    "search.exclude": {
        "**/build/**": true,                     // 搜索时排除build目录
        "**/node_modules": true,                 // 搜索时排除node_modules
        "**/CMakeFiles/**": true,                // 搜索时排除CMakeFiles
        "**/bin/**": true,                       // 搜索时排除bin目录
        "**/obj/**": true                        // 搜索时排除obj目录
    },

    // ===== 文件监视排除 =====
    "files.watcherExclude": {
        "**/build/**": true,                     // 文件监视器排除build目录
        "**/CMakeFiles/**": true,                // 文件监视器排除CMakeFiles
        "**/node_modules/**": true,              // 文件监视器排除node_modules
        "**/bin/**": true,                       // 文件监视器排除bin目录
        "**/obj/**": true                        // 文件监视器排除obj目录
    },

    // ===== C/C++配置 =====
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools", // 使用CMake工具作为配置提供者

    // ===== 编辑器配置 =====
    "editor.tabSize": 4,                         // 设置默认缩进为4个空格
    "editor.insertSpaces": true,                 // 使用空格而不是制表符
    "editor.detectIndentation": false,           // 不自动检测缩进
    "[javascript]": {
        "editor.tabSize": 4,                     // JavaScript文件使用4空格缩进
        "editor.detectIndentation": false        // 不自动检测JavaScript文件的缩进
    },
    "[json]": {
        "editor.tabSize": 2                      // JSON文件使用2空格缩进
    },

    // ===== 调试配置 =====
    "cmake.debugConfig": {
        "stopAtEntry": true,                     // 在程序入口点停止
        "MIMode": "gdb",                         // 使用GDB作为调试器
        "miDebuggerPath": "gdb",                 // GDB路径
        "setupCommands": [
            {
                "description": "为 gdb 启用整齐打印",
                "text": "-enable-pretty-printing",
                "ignoreFailures": true
            }
        ]
    },

    // ===== 构建类型配置 =====
    "cmake.defaultVariants": {
        "buildType": {
            "default": "debug",                  // 默认使用Debug构建
            "description": "The build type.",
            "choices": {
                "debug": {
                    "short": "Debug",
                    "long": "禁用优化 - 包含调试信息",
                    "buildType": "Debug"
                },
                "release": {
                    "short": "Release",
                    "long": "优化速度 - 排除调试信息",
                    "buildType": "Release"
                },
                "relWithDebInfo": {
                    "short": "RelWithDebInfo",
                    "long": "优化速度 - 包含调试信息",
                    "buildType": "RelWithDebInfo"
                },
                "minSizeRel": {
                    "short": "MinSizeRel",
                    "long": "优化大小 - 排除调试信息",
                    "buildType": "MinSizeRel"
                }
            }
        }
    },

    // ===== 测试相关配置（全部禁用） =====
    "cmake.autoRunTests": false,                 // 不自动运行测试
    "cmake.testing.enableAutoDiscoverOnOpen": false, // 打开时不自动发现测试
    "cmake.testing.autoStartTests": false,       // 不自动开始测试
    "cmake.testing.autoStopTests": false,        // 不自动停止测试

    // 下面是一系列与自动监视相关的配置，全部禁用
    "cmake.testing.autoWatchOnStartup": false,
    "cmake.testing.autoWatchOnConfigure": false,
    "cmake.testing.autoWatchOnBuild": false,
    "cmake.testing.autoWatchOnTest": false,
    "cmake.testing.autoWatchOnDebug": false,
    "cmake.testing.autoWatchOnRun": false,
    "cmake.testing.autoWatchOnStop": false,
    "cmake.testing.autoWatchOnClean": false,
    "cmake.testing.autoWatchOnInstall": false,
    "cmake.testing.autoWatchOnPackage": false,
    "cmake.testing.autoWatchOnConfigureStart": false,
    "cmake.testing.autoWatchOnConfigureEnd": false,
    "cmake.testing.autoWatchOnBuildStart": false,
    "cmake.testing.autoWatchOnBuildEnd": false,
    "cmake.testing.autoWatchOnTestStart": false,
    "cmake.testing.autoWatchOnTestEnd": false,
    "cmake.testing.autoWatchOnDebugStart": false,
    "cmake.testing.autoWatchOnDebugEnd": false,
    "cmake.testing.autoWatchOnRunStart": false,
    "cmake.testing.autoWatchOnRunEnd": false,
    "cmake.testing.autoWatchOnStopStart": false,
    "cmake.testing.autoWatchOnStopEnd": false,
    "cmake.testing.autoWatchOnCleanStart": false,
    "cmake.testing.autoWatchOnCleanEnd": false,
    "cmake.testing.autoWatchOnInstallStart": false,
    "cmake.testing.autoWatchOnInstallEnd": false,
    "cmake.testing.autoWatchOnPackageStart": false,
    "cmake.testing.autoWatchOnPackageEnd": false,
    "files.associations": {
      "*.sqlbook": "sql",
      "*.ndjson": "jsonl",
      "*.dbclient-js": "javascript",
      "*.html": "html",
      "*.json": "json",
      "algorithm": "cpp",
      "array": "cpp",
      "atomic": "cpp",
      "bit": "cpp",
      "cctype": "cpp",
      "charconv": "cpp",
      "clocale": "cpp",
      "cmath": "cpp",
      "compare": "cpp",
      "concepts": "cpp",
      "cstddef": "cpp",
      "cstdint": "cpp",
      "cstdio": "cpp",
      "cstdlib": "cpp",
      "cstring": "cpp",
      "ctime": "cpp",
      "cwchar": "cpp",
      "cwctype": "cpp",
      "deque": "cpp",
      "exception": "cpp",
      "format": "cpp",
      "fstream": "cpp",
      "functional": "cpp",
      "initializer_list": "cpp",
      "iomanip": "cpp",
      "ios": "cpp",
      "iosfwd": "cpp",
      "iostream": "cpp",
      "istream": "cpp",
      "iterator": "cpp",
      "limits": "cpp",
      "list": "cpp",
      "locale": "cpp",
      "map": "cpp",
      "memory": "cpp",
      "new": "cpp",
      "numeric": "cpp",
      "optional": "cpp",
      "ostream": "cpp",
      "queue": "cpp",
      "random": "cpp",
      "sstream": "cpp",
      "stdexcept": "cpp",
      "streambuf": "cpp",
      "string": "cpp",
      "system_error": "cpp",
      "tuple": "cpp",
      "type_traits": "cpp",
      "typeinfo": "cpp",
      "unordered_map": "cpp",
      "utility": "cpp",
      "vector": "cpp",
      "xfacet": "cpp",
      "xhash": "cpp",
      "xiosbase": "cpp",
      "xlocale": "cpp",
      "xlocbuf": "cpp",
      "xlocinfo": "cpp",
      "xlocmes": "cpp",
      "xlocmon": "cpp",
      "xlocnum": "cpp",
      "xloctime": "cpp",
      "xmemory": "cpp",
      "xstring": "cpp",
      "xtr1common": "cpp",
      "xtree": "cpp",
      "xutility": "cpp",
      "*.tcc": "cpp",
      "string_view": "cpp"
    }
}
